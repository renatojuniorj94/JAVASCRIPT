Aula 2 - Tipos de saída

1- document.getElementById('texto').innerHTML=""
    *Para interação com a página.

2 - document.write('Escrito com document.write')
    *Usado para testes.

3 - alert("")
    *Emite um alerta ao carregar a página.

4 - console.log('')
    *Usado para saídas em terminais(console).

---------------FIM-----------------

Aula 3 - Declarações

*Nenhuma anotação*

--------------------FIM-----------------

Aula 4 - Sintaxe

Aprendemos a nomear variáveis.

Camel case = var/let/const primeiroNome = 
Ou com underline
var/let/const primeiro_nome = 
Podemos começar também com $

----------------FIM--------------

Aula 6 - Variaáveis > Var / Let / Const


let (Usamos para praticamente tudo) > Uma vez declarada, ela não pode ser alterada. Exceto em diferentes blocos de códigos.

var > Pode ser redefinido.

Const > Uma vez declarado, não pode ser alterado e também não pode receber o mesmo nome dentro de outros blocos de códigos. 

Não pode começar com número, conter espaços e símbolos ou palavras reservadas.

------------------FIM--------------------

Aula 7 - Operadores
https://www.w3schools.com/js/js_operators.asp

+ - * / = ++ -- += -= && || etc...

São separados em 6 categorias:

1 - Operadores Aritméticos (matemáticos)
2 - Operadores de atribuição
3 - Operadores de sequência
4 - Operadores de comparação:
    == > Iguais 
    === > Idênticos 
    != Diferente
    !== Verifica se valor e tipo são diferentes
    < Menor
    > Maior
    <= Menor/igual
    >= Maior/igual
5 - Operador condicional (ternário)
    ? :
6 - Operadores lógicos
    && > E
    || > Ou
    ! > Negação

-----------------------FIM-----------------------

Aula 9 - Objetos

Definindo um objeto:

const carro = {marca: "toyota", modelo: "etios", ano:2018, placa:"ABC-1234"}

ou

const carro = {marca: "toyota",
     modelo: "etios",
     ano:2018,
     placa:"ABC-1234"
} 

Para deixar mais organizado.

Geralmente em objetos, usamos a variável "const".

------------------FIM---------------------

Aula 10 - Eventos
https://www.w3schools.com/js/js_events.asp

onclick - Disparado quando recebe um click
ondblckick - Disparado com clique duplo
onmouseover - Disparado quando mouse está sobre
onmouseout - Disparado quando o mouse é movido para fora do elemento
onmousemove - Disparado quando o mouse é movido para o elemento
onmousedown - Disparado quando o clique do botão foi pressionado
onmouseup - Disparado quando o clique do botão é liberado
onfocus - Disparado quando o elemento recebe o foco. Válido para input *(Pesquisar sobre)
onchange - Disparado quando existe uma mudança no conteúdo
onblur - Disparado quando o elemento perde o foco
onkeydown - Disparado quando uma tecla é pressionada
onkeypress - Disparado quando uma tecla é pressionada e solta
onkeyup - Disparado quando uma tecla é solta sobre um elemento
onload - Disparado quando a página terminou de ser carregada. Body
onresize - Disparado quando há um redimencionamento da janela

No evento 'onfocus' ao tentar emitir um 'alert' no navegador, apresenta um bug.

---------------------FIM---------------------

Aula 11/12 - Array(Matrizes)
https://www.w3schools.com/js/js_arrays.asp
https://www.w3schools.com/js/js_array_methods.asp

Objetos usamos {}
Matrizes usamos []

Maneiras de criar array:

var lista = ["arroz", "feijão", "macarrão"]
--------------------------------------
var lista = []
lista[0] = "Arroz"
lista[1] = "Feijão"
lista[2] = "Macarrão"
--------------------------------------
var lista = new Array("Arroz","Feijão","Macarrão")
--------------------------------------

Para saber se é um Array (True or false):
alert(Array.isArray(lista))

Substituindo um item dentro do Array:
const lista = ["arroz","feijão","macarrão","leite"]
lista[0] = "café" > Aqui trocamos o item 0. Substituimos "arroz" por "café"
alert(lista[0])

Para ver todos os itens de uma Array:
console.log(lista)

Aula 12 - Métodos para Arrays(Matrizes)



-----------------------FIM-----------------------

Aula 13 - If e Else (Condições)
https://www.w3schools.com/js/js_if_else.asp

----------------FIM-----------------

Aula 14 - Switch
https://www.w3schools.com/js/js_switch.asp

-------------------FIM---------------------

Aula 15 - Laços de repetição
https://www.w3schools.com/js/js_loop_for.asp

---------------------FIM----------------------

Aula 16 - SetTimeout e SetInterval
https://www.w3schools.com/js/js_timing.asp

Eventos de tempo com JavaScript

Os eventos de tempo permitem a execução do código em intervalos de tempo especificados. Esses intervalos de tempo são chamados de eventos de cronometragem.

Os dois métodos-chave para usar com JavaScript são:

setTimeout(function, tempo em milisegundos)
> É o mesmo que setTimeout(), mas repete a execução da função continuamente.

setInterval(function, milisegundos)
> É o mesmo que setTimeout(), mas repete a execução da função continuamente.

-----------------------FIM-----------------------

Aula 17 - Classes
https://www.w3schools.com/js/js_class_intro.asp

Classes em JavaScript

Em 2015 foi introduzido no JavaScript as classes. As classes são um conceito antigo em programação e várias linguagens utilizam elas. Mas no JavaScript isso é relativamente novo, por isso mesmo programadores experientes não sabem muito bem utilizar.

Basicamente, as classes são como fábricas para criar objetos. Pode se dizer que são "funções especiais" para criação de objetos.

Assim como uma fábrica da vida real precisa das máquinas para construir os objetos, as classes em JavaScript usam um método chamado constructor() para fabricar os objetos.

----------------------FIM--------------------

Aula 18 - Manipulação de datas
https://codepen.io/genial-cursos/pen/poWObMq

-------------------FIM----------------------

Aula 19 - JSON
https://www.w3schools.com/js/js_json_intro.asp

Explicando de um modo simples JSON é basicamente uma forma de converter um objeto em texto e o contrário também, um texto em um objeto.

Ele é usado principalmente para transmitir dados entre sistemas de forma simples, já que o formato de texto é lido por praticamente toda linguagem de programação.

Para trabalhar com JSON no JavaScript usamos dois métodos:

JSON.pase() > Converte texto no padrão JSON em objetos.
JSON.stringify() > Converte objetos em texto padrão JSON.

-----------------------FIM-----------------------

Aula 20 - Projeto lista de tarefas

Código da aula
https://codepen.io/genial-cursos/pen/oNGQbeb